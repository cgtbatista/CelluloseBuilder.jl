function generate_cellulose_topology(; filename=nothing)

    if isnothing(filename)
        filename = tempname() * ".rtf"
    end

    rtf = Base.open(filename, "w")
    
    Base.write(rtf, "! This file is the topology file needed to build cellulose crystal (CHARMM36)\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "read rtf card append\n")
    Base.write(rtf, "36 1\n\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS\n")
    Base.write(rtf, "!! carbon\n")
    Base.write(rtf, "MASS  -1  CC3161    12.01100 C ! C2, C3, C4 CH bound to OH\n")
    Base.write(rtf, "MASS  -1  CC3162    12.01100 C ! C1 (anomeric) CH bound to OH\n")
    Base.write(rtf, "MASS  -1  CC3163    12.01100 C ! C5 CH bound to exocylic CH2OH\n")
    Base.write(rtf, "MASS  -1  CC321     12.01100 C ! generic acyclic CH2 carbon (hexopyranose C6)\n")
    Base.write(rtf, "!! hydrogen\n")
    Base.write(rtf, "MASS  -1  HCA1       1.00800 H ! aliphatic proton, CH\n")
    Base.write(rtf, "MASS  -1  HCA2       1.00800 H ! aliphatic proton, CH2\n")
    Base.write(rtf, "MASS  -1  HCP1       1.00800 H ! polar H\n")
    Base.write(rtf, "!! oxygen\n")
    Base.write(rtf, "MASS  -1  OC311     15.99940 O ! hydroxyl oxygen\n")
    Base.write(rtf, "MASS  -1  OC3C61    15.99940 O ! ether in six membered ring\n")
    Base.write(rtf, "MASS  -1  OC301     15.99940 O ! generic linear ether\n")
    Base.write(rtf, "! DEFAults for patching FIRSt and LAST residues\n")
    Base.write(rtf, "DEFA FIRS NONE LAST NONE\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS PATCH DRUDE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! RESIDS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "RESI BGLC           0.000  ! 4C1 beta-D-glucose\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C1   CC3162    0.340  !\n")
    Base.write(rtf, "ATOM H1   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O1   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO1  HCP1      0.420  !\n")
    Base.write(rtf, "ATOM C5   CC3163    0.110  !\n")
    Base.write(rtf, "ATOM H5   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O5   OC3C61   -0.400  !\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C2   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H2   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O2   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO2  HCP1      0.420  !\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C3   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H3   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O3   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO3  HCP1      0.420  !\n")
    Base.write(rtf, "GROU\n")
    Base.write(rtf, "ATOM C4   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H4   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O4   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO4  HCP1      0.420  !\n")
    Base.write(rtf, "GROU\n")
    Base.write(rtf, "ATOM C6   CC321     0.050  !\n")
    Base.write(rtf, "ATOM H61  HCA2      0.090  !\n")
    Base.write(rtf, "ATOM H62  HCA2      0.090  !\n")
    Base.write(rtf, "ATOM O6   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO6  HCP1      0.420  !\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "BOND C1   O1        C1   H1        O1   HO1       C1   O5        C1   C2\n")
    Base.write(rtf, "BOND C2   H2        C2   O2        O2   HO2       C2   C3        C3   H3\n")
    Base.write(rtf, "BOND C3   O3        O3   HO3       C3   C4        C4   H4        C4   O4\n")
    Base.write(rtf, "BOND O4   HO4       C4   C5        C5   H5        C5   C6        C6   H61\n")
    Base.write(rtf, "BOND C6   H62       C6   O6        O6   HO6       C5   O5\n")
    Base.write(rtf, "!    I    J    K    L      R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC   O1   C2  *C1   H1     1.3899  110.90  120.10  104.58   1.0836\n")
    Base.write(rtf, "IC   O1   O5  *C1   C2     1.3899  108.62  122.10  110.88   1.5316\n")
    Base.write(rtf, "IC   O2   C3  *C2   H2     1.4594  108.12 -118.78  111.06   1.1375\n")
    Base.write(rtf, "IC   O2   C1  *C2   C3     1.4594  115.65 -125.60  113.28   1.4983\n")
    Base.write(rtf, "IC   O3   C4  *C3   H3     1.4071  113.48  122.06  103.39   1.0895\n")
    Base.write(rtf, "IC   O3   C2  *C3   C4     1.4071  108.48  124.18  109.26   1.5497\n")
    Base.write(rtf, "IC   O4   C5  *C4   H4     1.3940  111.12 -110.35  108.66   1.0857\n")
    Base.write(rtf, "IC   O4   C3  *C4   C5     1.3940  112.77 -129.39  115.62   1.5530\n")
    Base.write(rtf, "IC   C6   O5  *C5   H5     1.5597  111.17  120.85  110.98   1.1092\n")
    Base.write(rtf, "IC   C6   C4  *C5   O5     1.5597  109.90  122.92  110.30   1.4512\n")
    Base.write(rtf, "IC   O6   H62 *C6   H61    1.4589  116.11 -112.93  103.57   1.1467\n")
    Base.write(rtf, "IC   O6   C5  *C6   H62    1.4589  109.41 -135.95  118.22   1.0853\n")
    Base.write(rtf, "IC   O5   C1   C2   C3     1.4620  110.88   57.82  113.28   1.4983\n")
    Base.write(rtf, "IC   C1   C2   C3   C4     1.5316  113.28  -48.40  109.26   1.5497\n")
    Base.write(rtf, "IC   C2   C3   C4   C5     1.4983  109.26   45.07  115.62   1.5530\n")
    Base.write(rtf, "IC   C3   C4   C5   O5     1.5497  115.62  -49.19  110.30   1.4512\n")
    Base.write(rtf, "IC   C4   C5   O5   C1     1.5530  110.30   56.36  112.12   1.4620\n")
    Base.write(rtf, "IC   C5   O5   C1   C2     1.4512  112.12  -61.39  110.88   1.5316\n")
    Base.write(rtf, "IC   C4   C5   C6   O6     1.5530  109.90 -177.46  109.41   1.4589\n")
    Base.write(rtf, "IC   O5   C1   O1   HO1    1.4620  108.62   72.25  106.48   0.9328\n")
    Base.write(rtf, "IC   C1   C2   O2   HO2    1.5316  115.65  135.41  116.81   0.9527\n")
    Base.write(rtf, "IC   C2   C3   O3   HO3    1.4983  108.48  -71.46  120.86   0.9441\n")
    Base.write(rtf, "IC   C3   C4   O4   HO4    1.5497  112.77   47.45  109.31   0.9911\n")
    Base.write(rtf, "IC   C5   C6   O6   HO6    1.5597  109.41  -54.60  118.82   0.95210\n")
    Base.write(rtf, "PATC  FIRS NONE LAST NONE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! PATCHES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "! equatorial-equatorial 1->4 linkage\n")
    Base.write(rtf, "! LACTOS03, EYOCUQ01, CELLOB01\n")
    Base.write(rtf, "PRES 14bb           0.02 ! (i)1->4(i-1) equatorial at C1 and equatorial at C4\n")
    Base.write(rtf, "dele atom 1HO4\n")
    Base.write(rtf, "dele atom 2HO1\n")
    Base.write(rtf, "dele atom 2O1\n")
    Base.write(rtf, "ATOM 1C4  CC3161    0.09 !\n")
    Base.write(rtf, "ATOM 1O4  OC301    -0.36 !\n")
    Base.write(rtf, "ATOM 2C1  CC3162    0.29 !\n")
    Base.write(rtf, "BOND 1O4  2C1\n")
    Base.write(rtf, "!    I    J    K    L      R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC   1C3  1C4  1O4  2C1    1.5009  110.76   81.86  121.00   1.3902  ! psi\n")
    Base.write(rtf, "IC   1C4  1O4  2C1  2O5    1.4560  121.00 -130.97  108.63   1.4470  ! phi\n")
    Base.write(rtf, "IC   1O4  2O5 *2C1  2C2    1.3896  108.63  122.12  110.87   1.5318\n")
    Base.write(rtf, "IC   2O5  1O4 *2C1  2H1    1.4470  108.63  121.92  111.32   1.0837\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "END\n")

    Base.close(rtf)

    return filename
end

function generate_petn_topology(; filename=nothing)

    if isnothing(filename)
        filename = tempname() * ".rtf"
    end

    rtf = Base.open(filename, "w")
    
    Base.write(rtf, "! This file is the topology file needed to generate pEtN and patch it to cellulose chain (CHARMM36)\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "read rtf card append\n")
    Base.write(rtf, "36 1\n\n")
    Base.write(rtf, "    AUTOGENERATE ANGLES DIHEDRALS\n")
    Base.write(rtf, "!! already exists on cgenff\n")
    Base.write(rtf, "MASS  -1  HGA2       1.00800 H                          ! alphatic proton, CH2\n")
    Base.write(rtf, "MASS  -1  HGP1       1.00800 H                          ! polar H\n")
    Base.write(rtf, "MASS  -1  HGP2       1.00800 H                          ! polar H, +ve charge\n")
    Base.write(rtf, "MASS  -1  CG321     12.01100 C                          ! aliphatic C for CH2\n")
    Base.write(rtf, "MASS  -1  CG324     12.01100 C                          ! aliphatic C for CH2, adjacent to positive N (piperidine) (+)\n")
    Base.write(rtf, "MASS  -1  NG3P3     14.00700 N                          ! primary NH3+, phosphatidylethanolamine\n")
    Base.write(rtf, "MASS  -1  OG2P1     15.99940 O                          ! =O in phosphate or sulfate\n")
    Base.write(rtf, "MASS  -1  OG303     15.99940 O                          ! phosphate/sulfate ester oxygen\n")
    Base.write(rtf, "MASS  -1  OG311     15.99940 O                          ! hydroxyl oxygen\n")
    Base.write(rtf, "MASS  -1  PG1       30.97380 P                          ! phosphate -1\n")
    Base.write(rtf, "!! already exists on carb force field\n")
    Base.write(rtf, "MASS  -1  CC321     12.01100 C                          ! aliphatic C for CH2 (e.g. CA and CB) it should be equal C6\n")
    Base.write(rtf, "MASS  -1  HCA2       1.00800 H                          ! alphatic proton, CH2\n")
    Base.write(rtf, "MASS  -1  HCP1       1.00800 H                          ! polar H\n")
    Base.write(rtf, "MASS  -1  OC2DP     15.99940 O                          ! =O in phosphate or sulfate		    || O2L in top_all27_lipid.rtf\n")
    Base.write(rtf, "MASS  -1  OC312     15.99940 O                          ! hydroxyl oxygen			            || OHL in top_all27_lipid.rtf\n")
    Base.write(rtf, "MASS  -1  OC30P     15.99940 O                          ! phosphate/sulfate ester oxygen		|| OSL in top_all27_lipid.rtf\n")
    Base.write(rtf, "MASS  -1  PC        30.97380 P                          ! phosphate -1\n")
    Base.write(rtf, "!! new ones to phosphoethanolamine patch\n")
    Base.write(rtf, "MASS  -1  CC324     12.01100 C                          ! aliphatic C for CH2 (e.g. CA and CB) it should be equal C6\n")
    Base.write(rtf, "MASS  -1  HCP2       1.00800 H                          ! polar H, +ve charge\n")
    Base.write(rtf, "MASS  -1  NC3P3     14.00700 N                          ! primary NH3+, phosphatidylethanolamine\n\n")
    Base.write(rtf, "! DEFAults for patching FIRSt and LAST residues\n")
    Base.write(rtf, "DEFA FIRS NONE LAST NONE\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS PATCH DRUDE\n\n")
    Base.write(rtf, "RESI ENP            0.000 !   Phosphoethanolamine\n")
    Base.write(rtf, "GROUP             ! CHARGE\n")
    Base.write(rtf, "ATOM NP     NG3P3  -0.293 !\n")
    Base.write(rtf, "ATOM HN1    HGP2    0.328 !\n")
    Base.write(rtf, "ATOM HN2    HGP2    0.328 !\n")
    Base.write(rtf, "ATOM HN3    HGP2    0.328 !\n")
    Base.write(rtf, "ATOM CA     CG324   0.130 !\n")
    Base.write(rtf, "ATOM HA1    HGA2    0.090 !\n")
    Base.write(rtf, "ATOM HA2    HGA2    0.090 !\n")
    Base.write(rtf, "ATOM CB     CG321  -0.084 !\n")
    Base.write(rtf, "ATOM HB1    HGA2    0.090 !\n")
    Base.write(rtf, "ATOM HB2    HGA2    0.090 !\n")
    Base.write(rtf, "ATOM P      PG1     1.505 !\n")
    Base.write(rtf, "ATOM O4P    OG2P1  -0.824 !\n")
    Base.write(rtf, "ATOM O3P    OG2P1  -0.824 !\n")
    Base.write(rtf, "ATOM O2P    OG303  -0.623 !\n")
    Base.write(rtf, "ATOM O1P    OG311  -0.669 !\n")
    Base.write(rtf, "ATOM HOP    HGP1    0.338 !\n")
    Base.write(rtf, "BOND NP   HN1  !\n")
    Base.write(rtf, "BOND NP   HN2  !\n")
    Base.write(rtf, "BOND NP   HN3  !\n")
    Base.write(rtf, "BOND NP   CA   !\n")
    Base.write(rtf, "BOND CA   CB   !\n")
    Base.write(rtf, "BOND CA   HA1  !\n")
    Base.write(rtf, "BOND CA   HA2  !\n")
    Base.write(rtf, "BOND CB   HB1  !\n")
    Base.write(rtf, "BOND CB   HB2  !\n")
    Base.write(rtf, "BOND CB   O2P  !\n")
    Base.write(rtf, "BOND P    O3P  !\n")
    Base.write(rtf, "BOND P    O1P  !\n")
    Base.write(rtf, "BOND P    O4P  !\n")
    Base.write(rtf, "BOND P    O2P  !\n")
    Base.write(rtf, "BOND O1P  HOP  !\n")
    Base.write(rtf, "PATC FIRS NONE LAST NONE\n\n")
    Base.write(rtf, "PRES PETN         -0.270       ! pEtN-BGlc linkage\n")
    Base.write(rtf, "dele atom HO6                  ! residual charge = +0.420\n")
    Base.write(rtf, "ATOM C6  CC321    -0.075       ! B-Glc O6 attacking the pEtN P (like a SN1 mechanism)\n")
    Base.write(rtf, "ATOM O6  OC311    -0.571       ! phosphatidylethanolamine + cellulose -> pEtN-cellulose + diacylglycerol\n")
    Base.write(rtf, "ATOM NP  NC3P3    -0.293 !\n")
    Base.write(rtf, "ATOM HN1 HCP2      0.328 !\n")
    Base.write(rtf, "ATOM HN2 HCP2      0.328 !\n")
    Base.write(rtf, "ATOM HN3 HCP2      0.328 !\n")
    Base.write(rtf, "ATOM CA  CC324     0.130 !\n")
    Base.write(rtf, "ATOM HA1 HCA2      0.090 !\n")
    Base.write(rtf, "ATOM HA2 HCA2      0.090 !\n")
    Base.write(rtf, "ATOM CB  CC321    -0.077 !\n")
    Base.write(rtf, "ATOM HB1 HCA2      0.090 !\n")
    Base.write(rtf, "ATOM HB2 HCA2      0.090 !\n")
    Base.write(rtf, "ATOM P   PC        1.501 !\n")
    Base.write(rtf, "ATOM O2P OC30P    -0.569 !\n")
    Base.write(rtf, "ATOM O3P OC2DP    -0.785 !\n")
    Base.write(rtf, "ATOM O4P OC2DP    -0.785 !\n")
    Base.write(rtf, "BOND O6 P\n")
    Base.write(rtf, "BOND NP HN1  NP HN2  NP HN3  NP CA  CA CB  CA HA1  CA HA2  CB HB1  CB HB2  CB O2P  P O2P  P O3P  P O4P\n")
    Base.write(rtf, "!    I     J     K     L      R(IK)  T(IKJ)   PHI    T(JKL)   R(KL) \n")
    Base.write(rtf, "IC   HN1   CA   *NP    HN2   1.0400  110.15  122.13  117.40  1.0400 ! based on the IC of the pEtN in DLiPE\n")
    Base.write(rtf, "IC   HN1   CA   *NP    HN3   1.0400  110.15 -124.28  113.58  1.0400 ! toppar_all36_lipid_miscellaneous.str\n")
    Base.write(rtf, "IC   HN1   NP    CA    CB    1.0400  110.15  157.44  108.52  1.4921 !\n")
    Base.write(rtf, "IC   CB    NP   *CA    HA1   1.4921  108.52 -124.86  113.65  1.1110 !\n")
    Base.write(rtf, "IC   HA1   NP   *CA    HA2   1.1110  113.65 -107.22  102.84  1.1110 !\n")
    Base.write(rtf, "IC   NP    CA    CB    O2P   1.5241  108.52   60.11  106.54  1.4914 !\n")
    Base.write(rtf, "IC   O2P   CA   *CB    HB1   1.4914  106.54 -125.10  115.49  1.1110 !\n")
    Base.write(rtf, "IC   HB1   CA   *CB    HB2   1.1110  115.49 -116.55  111.62  1.1110 !\n")
    Base.write(rtf, "IC   CA    CB    O2P   P     1.4921  106.54  109.74  118.42  1.5799 !\n")
    Base.write(rtf, "IC   CB    O2P   P     O6    1.4914  118.42   45.68  108.09  1.5231 !\n")
    Base.write(rtf, "IC   O6    O2P  *P     O3P   1.5231  108.09  119.87  104.67  1.4621 !\n")
    Base.write(rtf, "IC   O6    O2P  *P     O4P   1.5231  108.09 -120.31  106.92  1.5173 !\n")
    Base.write(rtf, "IC   O2P   P     O6    C6    1.5799  108.09   83.12  132.97  1.4179 !\n")
    Base.write(rtf, "IC   P     O6    C6    C5    1.5231  132.97  -54.60  109.41  1.5597 !\n\n")
    Base.write(rtf, "END\n")
    Base.close(rtf)

    return filename
end

