function generate_cellulose_topology(; filename=nothing)

    if isnothing(filename)
        filename = tempname() * ".rtf"
    end

    rtf = Base.open(filename, "w")
    
    Base.write(rtf, "! This file is the topology file needed to build cellulose crystal (CHARMM36)\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "read rtf card append\n")
    Base.write(rtf, "36 1\n\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS\n")
    Base.write(rtf, "!! carbon\n")
    Base.write(rtf, "MASS  -1  CC3161    12.01100 C ! C2, C3, C4 CH bound to OH\n")
    Base.write(rtf, "MASS  -1  CC3162    12.01100 C ! C1 (anomeric) CH bound to OH\n")
    Base.write(rtf, "MASS  -1  CC3163    12.01100 C ! C5 CH bound to exocylic CH2OH\n")
    Base.write(rtf, "MASS  -1  CC321     12.01100 C ! generic acyclic CH2 carbon (hexopyranose C6)\n")
    Base.write(rtf, "!! hydrogen\n")
    Base.write(rtf, "MASS  -1  HCA1       1.00800 H ! aliphatic proton, CH\n")
    Base.write(rtf, "MASS  -1  HCA2       1.00800 H ! aliphatic proton, CH2\n")
    Base.write(rtf, "MASS  -1  HCP1       1.00800 H ! polar H\n")
    Base.write(rtf, "!! oxygen\n")
    Base.write(rtf, "MASS  -1  OC311     15.99940 O ! hydroxyl oxygen\n")
    Base.write(rtf, "MASS  -1  OC3C61    15.99940 O ! ether in six membered ring\n")
    Base.write(rtf, "MASS  -1  OC301     15.99940 O ! generic linear ether\n")
    Base.write(rtf, "! DEFAults for patching FIRSt and LAST residues\n")
    Base.write(rtf, "DEFA FIRS NONE LAST NONE\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS PATCH DRUDE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! RESIDS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "RESI BGLC           0.000  ! 4C1 beta-D-glucose\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C1   CC3162    0.340  !\n")
    Base.write(rtf, "ATOM H1   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O1   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO1  HCP1      0.420  !\n")
    Base.write(rtf, "ATOM C5   CC3163    0.110  !\n")
    Base.write(rtf, "ATOM H5   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O5   OC3C61   -0.400  !\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C2   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H2   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O2   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO2  HCP1      0.420  !\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C3   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H3   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O3   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO3  HCP1      0.420  !\n")
    Base.write(rtf, "GROU\n")
    Base.write(rtf, "ATOM C4   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H4   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O4   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO4  HCP1      0.420  !\n")
    Base.write(rtf, "GROU\n")
    Base.write(rtf, "ATOM C6   CC321     0.050  !\n")
    Base.write(rtf, "ATOM H61  HCA2      0.090  !\n")
    Base.write(rtf, "ATOM H62  HCA2      0.090  !\n")
    Base.write(rtf, "ATOM O6   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO6  HCP1      0.420  !\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "BOND C1   O1        C1   H1        O1   HO1       C1   O5        C1   C2\n")
    Base.write(rtf, "BOND C2   H2        C2   O2        O2   HO2       C2   C3        C3   H3\n")
    Base.write(rtf, "BOND C3   O3        O3   HO3       C3   C4        C4   H4        C4   O4\n")
    Base.write(rtf, "BOND O4   HO4       C4   C5        C5   H5        C5   C6        C6   H61\n")
    Base.write(rtf, "BOND C6   H62       C6   O6        O6   HO6       C5   O5\n")
    Base.write(rtf, "!    I    J    K    L      R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC   O1   C2  *C1   H1     1.3899  110.90  120.10  104.58   1.0836\n")
    Base.write(rtf, "IC   O1   O5  *C1   C2     1.3899  108.62  122.10  110.88   1.5316\n")
    Base.write(rtf, "IC   O2   C3  *C2   H2     1.4594  108.12 -118.78  111.06   1.1375\n")
    Base.write(rtf, "IC   O2   C1  *C2   C3     1.4594  115.65 -125.60  113.28   1.4983\n")
    Base.write(rtf, "IC   O3   C4  *C3   H3     1.4071  113.48  122.06  103.39   1.0895\n")
    Base.write(rtf, "IC   O3   C2  *C3   C4     1.4071  108.48  124.18  109.26   1.5497\n")
    Base.write(rtf, "IC   O4   C5  *C4   H4     1.3940  111.12 -110.35  108.66   1.0857\n")
    Base.write(rtf, "IC   O4   C3  *C4   C5     1.3940  112.77 -129.39  115.62   1.5530\n")
    Base.write(rtf, "IC   C6   O5  *C5   H5     1.5597  111.17  120.85  110.98   1.1092\n")
    Base.write(rtf, "IC   C6   C4  *C5   O5     1.5597  109.90  122.92  110.30   1.4512\n")
    Base.write(rtf, "IC   O6   H62 *C6   H61    1.4589  116.11 -112.93  103.57   1.1467\n")
    Base.write(rtf, "IC   O6   C5  *C6   H62    1.4589  109.41 -135.95  118.22   1.0853\n")
    Base.write(rtf, "IC   O5   C1   C2   C3     1.4620  110.88   57.82  113.28   1.4983\n")
    Base.write(rtf, "IC   C1   C2   C3   C4     1.5316  113.28  -48.40  109.26   1.5497\n")
    Base.write(rtf, "IC   C2   C3   C4   C5     1.4983  109.26   45.07  115.62   1.5530\n")
    Base.write(rtf, "IC   C3   C4   C5   O5     1.5497  115.62  -49.19  110.30   1.4512\n")
    Base.write(rtf, "IC   C4   C5   O5   C1     1.5530  110.30   56.36  112.12   1.4620\n")
    Base.write(rtf, "IC   C5   O5   C1   C2     1.4512  112.12  -61.39  110.88   1.5316\n")
    Base.write(rtf, "IC   C4   C5   C6   O6     1.5530  109.90 -177.46  109.41   1.4589\n")
    Base.write(rtf, "IC   O5   C1   O1   HO1    1.4620  108.62   72.25  106.48   0.9328\n")
    Base.write(rtf, "IC   C1   C2   O2   HO2    1.5316  115.65  135.41  116.81   0.9527\n")
    Base.write(rtf, "IC   C2   C3   O3   HO3    1.4983  108.48  -71.46  120.86   0.9441\n")
    Base.write(rtf, "IC   C3   C4   O4   HO4    1.5497  112.77   47.45  109.31   0.9911\n")
    Base.write(rtf, "IC   C5   C6   O6   HO6    1.5597  109.41  -54.60  118.82   0.95210\n")
    Base.write(rtf, "PATC  FIRS NONE LAST NONE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! PATCHES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "! equatorial-equatorial 1->4 linkage\n")
    Base.write(rtf, "! LACTOS03, EYOCUQ01, CELLOB01\n")
    Base.write(rtf, "PRES 14bb           0.02 ! (i)1->4(i-1) equatorial at C1 and equatorial at C4\n")
    Base.write(rtf, "dele atom 1HO4\n")
    Base.write(rtf, "dele atom 2HO1\n")
    Base.write(rtf, "dele atom 2O1\n")
    Base.write(rtf, "ATOM 1C4  CC3161    0.09 !\n")
    Base.write(rtf, "ATOM 1O4  OC301    -0.36 !\n")
    Base.write(rtf, "ATOM 2C1  CC3162    0.29 !\n")
    Base.write(rtf, "BOND 1O4  2C1\n")
    Base.write(rtf, "!    I    J    K    L      R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC   1C3  1C4  1O4  2C1    1.5009  110.76   81.86  121.00   1.3902  ! psi\n")
    Base.write(rtf, "IC   1C4  1O4  2C1  2O5    1.4560  121.00 -130.97  108.63   1.4470  ! phi\n")
    Base.write(rtf, "IC   1O4  2O5 *2C1  2C2    1.3896  108.63  122.12  110.87   1.5318\n")
    Base.write(rtf, "IC   2O5  1O4 *2C1  2H1    1.4470  108.63  121.92  111.32   1.0837\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "END\n")

    Base.close(rtf)

    return filename
end

function generate_petn_topology(; filename=nothing)

    if isnothing(filename)
        filename = tempname() * ".rtf"
    end

    rtf = Base.open(filename, "w")
    
    Base.write(rtf, "! This file is the topology file needed to generate pEtN and patch it to cellulose chain (CHARMM36)\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "read rtf card append\n")
    Base.write(rtf, "36 1\n\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS\n")
    Base.write(rtf, "!! carbon\n")
    Base.write(rtf, "MASS  -1  CG324     12.01100 C ! aliphatic C for CH2, adjacent to positive N (piperidine) (+)\n")
    Base.write(rtf, "MASS  -1  CG321     12.01100 C ! aliphatic C for CH2\n")
    Base.write(rtf, "!! hydrogen\n")
    Base.write(rtf, "MASS  -1  HGA2       1.00800 H ! alphatic proton, CH2\n")
    Base.write(rtf, "MASS  -1  HGP1       1.00800 H ! polar H\n")
    Base.write(rtf, "MASS  -1  HGP2       1.00800 H ! polar H, +ve charge\n")
    Base.write(rtf, "!! oxygen\n")
    Base.write(rtf, "MASS  -1  OG2P1     15.99940 O ! =O in phosphate or sulfate\n")
    Base.write(rtf, "MASS  -1  OG311     15.99940 O ! hydroxyl oxygen\n")
    Base.write(rtf, "MASS  -1  OG303     15.99940 O ! phosphate/sulfate ester oxygen\n")
    Base.write(rtf, "!! nitrogen\n")
    Base.write(rtf, "MASS  -1  NG3P3     14.00700 N ! primary NH3+, phosphatidylethanolamine\n")
    Base.write(rtf, "!! phosphorous\n")
    Base.write(rtf, "MASS  -1  PG1       30.97380 P  ! phosphate -1\n")
    Base.write(rtf, "! DEFAults for patching FIRSt and LAST residues\n")
    Base.write(rtf, "DEFA FIRS NONE LAST NONE\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS PATCH DRUDE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! RESIDS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "RESI PETN           0.000 ! param penalty=   0.000 ; charge penalty=   0.000\n")
    Base.write(rtf, "GROUP            ! CHARGE   CH_PENALTY Z   EL   NB NBE RNG1 TYP RNG2 TYP RNG3 TYP\n")
    Base.write(rtf, "ATOM N      NG3P3  -0.293 !    0.000   7   N    4  4\n")
    Base.write(rtf, "ATOM HN1    HGP2    0.328 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM HN2    HGP2    0.328 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM HN3    HGP2    0.328 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM C2     CG324   0.130 !    0.000   6   C    4  4\n")
    Base.write(rtf, "ATOM H2A    HGA2    0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM H2B    HGA2    0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM C1     CG321  -0.084 !    0.000   6   C    4  4\n")
    Base.write(rtf, "ATOM H1A    HGA2    0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM H1B    HGA2    0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM P      PG1     1.505 !    0.000   15  P    4  5\n")
    Base.write(rtf, "ATOM O3     OG2P1  -0.824 !    0.000   8   O    1  2\n")
    Base.write(rtf, "ATOM O4     OG2P1  -0.824 !    0.000   8   O    1  1\n")
    Base.write(rtf, "ATOM O1     OG311  -0.669 !    0.000   8   O    2  2\n")
    Base.write(rtf, "ATOM O2     OG303  -0.623 !    0.000   8   O    2  2\n")
    Base.write(rtf, "ATOM HO     HGP1    0.338 !    0.000   1   H    1  1\n")
    Base.write(rtf, "               ! TYP INR\n")
    Base.write(rtf, "BOND N    HN1  ! 1   0\n")
    Base.write(rtf, "BOND N    HN2  ! 1   0\n")
    Base.write(rtf, "BOND N    HN3  ! 1   0\n")
    Base.write(rtf, "BOND N    C2   ! 1   0\n")
    Base.write(rtf, "BOND C2   C1   ! 1   0\n")
    Base.write(rtf, "BOND C2   H2A  ! 1   0\n")
    Base.write(rtf, "BOND C2   H2B  ! 1   0\n")
    Base.write(rtf, "BOND C1   H1A  ! 1   0\n")
    Base.write(rtf, "BOND C1   H1B  ! 1   0\n")
    Base.write(rtf, "BOND C1   O2   ! 1   0\n")
    Base.write(rtf, "BOND P    O3   ! 2   0\n")
    Base.write(rtf, "BOND P    O1   ! 1   0\n")
    Base.write(rtf, "BOND P    O4   ! 1   0\n")
    Base.write(rtf, "BOND P    O2   ! 1   0\n")
    Base.write(rtf, "BOND O1   HO   ! 1   0\n")
    Base.write(rtf, "PATC FIRS NONE LAST NONE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! PATCHES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "! pEtN-BGlc linkage \n")
    Base.write(rtf, "! phosphatidylethanolamine + cellulose -> pEtN-cellulose + diacylglycerol\n")
    Base.write(rtf, "PRES PCEL		    -0.761  ! (i-1)6->P(i) B-Glc O6 attacking the pEtN P (maybe SN1 mechanism)\n")
    Base.write(rtf, "dele atom 1HO6		        ! residual charge =  0.420\n")
    Base.write(rtf, "dele atom 2O1		        ! residual charge = -0.669\n")
    Base.write(rtf, "dele atom 2HO		        ! residual charge =  0.338\n")
    Base.write(rtf, "ATOM 1C6  CG321     0.254  ! ORIGINAL PENALTY = 2.485\n")
    Base.write(rtf, "ATOM 1O6  OG303    -0.300  ! ORIGINAL PENALTY = 2.214\n")
    Base.write(rtf, "ATOM 2P   PG1	     1.501 \n")
    Base.write(rtf, "ATOM 2C1  CG321    -0.077 \n")
    Base.write(rtf, "ATOM 2O2  OG303    -0.569 \n")
    Base.write(rtf, "ATOM 2O3  OG2P1    -0.785 \n")
    Base.write(rtf, "ATOM 2O4  OG2P1    -0.785 \n")
    Base.write(rtf, "BOND 1O6  2P\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "END\n")

    Base.close(rtf)

    return filename
end