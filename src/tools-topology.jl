function generate_cellulose_topology(; filename=nothing)

    if isnothing(filename)
        filename = tempname() * ".rtf"
    end

    rtf = Base.open(filename, "w")
    
    Base.write(rtf, "! This file is the topology file needed to build cellulose crystal (CHARMM36)\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "read rtf card append\n")
    Base.write(rtf, "36 1\n\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS\n")
    Base.write(rtf, "!! carbon\n")
    Base.write(rtf, "MASS  -1  CC3161    12.01100 C ! C2, C3, C4 CH bound to OH\n")
    Base.write(rtf, "MASS  -1  CC3162    12.01100 C ! C1 (anomeric) CH bound to OH\n")
    Base.write(rtf, "MASS  -1  CC3163    12.01100 C ! C5 CH bound to exocylic CH2OH\n")
    Base.write(rtf, "MASS  -1  CC321     12.01100 C ! generic acyclic CH2 carbon (hexopyranose C6)\n")
    Base.write(rtf, "!! hydrogen\n")
    Base.write(rtf, "MASS  -1  HCA1       1.00800 H ! aliphatic proton, CH\n")
    Base.write(rtf, "MASS  -1  HCA2       1.00800 H ! aliphatic proton, CH2\n")
    Base.write(rtf, "MASS  -1  HCP1       1.00800 H ! polar H\n")
    Base.write(rtf, "!! oxygen\n")
    Base.write(rtf, "MASS  -1  OC311     15.99940 O ! hydroxyl oxygen\n")
    Base.write(rtf, "MASS  -1  OC3C61    15.99940 O ! ether in six membered ring\n")
    Base.write(rtf, "MASS  -1  OC301     15.99940 O ! generic linear ether\n")
    Base.write(rtf, "! DEFAults for patching FIRSt and LAST residues\n")
    Base.write(rtf, "DEFA FIRS NONE LAST NONE\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS PATCH DRUDE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! RESIDS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "RESI BGLC           0.000  ! 4C1 beta-D-glucose\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C1   CC3162    0.340  !\n")
    Base.write(rtf, "ATOM H1   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O1   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO1  HCP1      0.420  !\n")
    Base.write(rtf, "ATOM C5   CC3163    0.110  !\n")
    Base.write(rtf, "ATOM H5   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O5   OC3C61   -0.400  !\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C2   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H2   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O2   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO2  HCP1      0.420  !\n")
    Base.write(rtf, "GROU                       !\n")
    Base.write(rtf, "ATOM C3   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H3   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O3   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO3  HCP1      0.420  !\n")
    Base.write(rtf, "GROU\n")
    Base.write(rtf, "ATOM C4   CC3161    0.140  !\n")
    Base.write(rtf, "ATOM H4   HCA1      0.090  !\n")
    Base.write(rtf, "ATOM O4   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO4  HCP1      0.420  !\n")
    Base.write(rtf, "GROU\n")
    Base.write(rtf, "ATOM C6   CC321     0.050  !\n")
    Base.write(rtf, "ATOM H61  HCA2      0.090  !\n")
    Base.write(rtf, "ATOM H62  HCA2      0.090  !\n")
    Base.write(rtf, "ATOM O6   OC311    -0.650  !\n")
    Base.write(rtf, "ATOM HO6  HCP1      0.420  !\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "BOND C1   O1        C1   H1        O1   HO1       C1   O5        C1   C2\n")
    Base.write(rtf, "BOND C2   H2        C2   O2        O2   HO2       C2   C3        C3   H3\n")
    Base.write(rtf, "BOND C3   O3        O3   HO3       C3   C4        C4   H4        C4   O4\n")
    Base.write(rtf, "BOND O4   HO4       C4   C5        C5   H5        C5   C6        C6   H61\n")
    Base.write(rtf, "BOND C6   H62       C6   O6        O6   HO6       C5   O5\n")
    Base.write(rtf, "!    I    J    K    L      R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC   O1   C2  *C1   H1     1.3899  110.90  120.10  104.58   1.0836\n")
    Base.write(rtf, "IC   O1   O5  *C1   C2     1.3899  108.62  122.10  110.88   1.5316\n")
    Base.write(rtf, "IC   O2   C3  *C2   H2     1.4594  108.12 -118.78  111.06   1.1375\n")
    Base.write(rtf, "IC   O2   C1  *C2   C3     1.4594  115.65 -125.60  113.28   1.4983\n")
    Base.write(rtf, "IC   O3   C4  *C3   H3     1.4071  113.48  122.06  103.39   1.0895\n")
    Base.write(rtf, "IC   O3   C2  *C3   C4     1.4071  108.48  124.18  109.26   1.5497\n")
    Base.write(rtf, "IC   O4   C5  *C4   H4     1.3940  111.12 -110.35  108.66   1.0857\n")
    Base.write(rtf, "IC   O4   C3  *C4   C5     1.3940  112.77 -129.39  115.62   1.5530\n")
    Base.write(rtf, "IC   C6   O5  *C5   H5     1.5597  111.17  120.85  110.98   1.1092\n")
    Base.write(rtf, "IC   C6   C4  *C5   O5     1.5597  109.90  122.92  110.30   1.4512\n")
    Base.write(rtf, "IC   O6   H62 *C6   H61    1.4589  116.11 -112.93  103.57   1.1467\n")
    Base.write(rtf, "IC   O6   C5  *C6   H62    1.4589  109.41 -135.95  118.22   1.0853\n")
    Base.write(rtf, "IC   O5   C1   C2   C3     1.4620  110.88   57.82  113.28   1.4983\n")
    Base.write(rtf, "IC   C1   C2   C3   C4     1.5316  113.28  -48.40  109.26   1.5497\n")
    Base.write(rtf, "IC   C2   C3   C4   C5     1.4983  109.26   45.07  115.62   1.5530\n")
    Base.write(rtf, "IC   C3   C4   C5   O5     1.5497  115.62  -49.19  110.30   1.4512\n")
    Base.write(rtf, "IC   C4   C5   O5   C1     1.5530  110.30   56.36  112.12   1.4620\n")
    Base.write(rtf, "IC   C5   O5   C1   C2     1.4512  112.12  -61.39  110.88   1.5316\n")
    Base.write(rtf, "IC   C4   C5   C6   O6     1.5530  109.90 -177.46  109.41   1.4589\n")
    Base.write(rtf, "IC   O5   C1   O1   HO1    1.4620  108.62   72.25  106.48   0.9328\n")
    Base.write(rtf, "IC   C1   C2   O2   HO2    1.5316  115.65  135.41  116.81   0.9527\n")
    Base.write(rtf, "IC   C2   C3   O3   HO3    1.4983  108.48  -71.46  120.86   0.9441\n")
    Base.write(rtf, "IC   C3   C4   O4   HO4    1.5497  112.77   47.45  109.31   0.9911\n")
    Base.write(rtf, "IC   C5   C6   O6   HO6    1.5597  109.41  -54.60  118.82   0.95210\n")
    Base.write(rtf, "PATC  FIRS NONE LAST NONE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! PATCHES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "! equatorial-equatorial 1->4 linkage\n")
    Base.write(rtf, "! LACTOS03, EYOCUQ01, CELLOB01\n")
    Base.write(rtf, "PRES 14bb           0.02 ! (i)1->4(i-1) equatorial at C1 and equatorial at C4\n")
    Base.write(rtf, "dele atom 1HO4\n")
    Base.write(rtf, "dele atom 2HO1\n")
    Base.write(rtf, "dele atom 2O1\n")
    Base.write(rtf, "ATOM 1C4  CC3161    0.09 !\n")
    Base.write(rtf, "ATOM 1O4  OC301    -0.36 !\n")
    Base.write(rtf, "ATOM 2C1  CC3162    0.29 !\n")
    Base.write(rtf, "BOND 1O4  2C1\n")
    Base.write(rtf, "!    I    J    K    L      R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC   1C3  1C4  1O4  2C1    1.5009  110.76   81.86  121.00   1.3902  ! psi\n")
    Base.write(rtf, "IC   1C4  1O4  2C1  2O5    1.4560  121.00 -130.97  108.63   1.4470  ! phi\n")
    Base.write(rtf, "IC   1O4  2O5 *2C1  2C2    1.3896  108.63  122.12  110.87   1.5318\n")
    Base.write(rtf, "IC   2O5  1O4 *2C1  2H1    1.4470  108.63  121.92  111.32   1.0837\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "END\n")

    Base.close(rtf)

    return filename
end

function generate_petn_topology(; filename=nothing)

    if isnothing(filename)
        filename = tempname() * ".rtf"
    end

    rtf = Base.open(filename, "w")
    
    Base.write(rtf, "! This file is the topology file needed to generate pEtN and patch it to cellulose chain (CHARMM36)\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "read rtf card append\n")
    Base.write(rtf, "36 1\n\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS\n")
    Base.write(rtf, "!! carbon\n")
    Base.write(rtf, "MASS  -1  CC316P    12.01100 C ! aliphatic C for CH2\n")                                          ## CG321 -> CC3161
    Base.write(rtf, "!! hydrogen\n")
    Base.write(rtf, "MASS  -1  HCA2P      1.00800 H ! alphatic proton, CH2\n")                                         ## HGA2  -> HCA2
    Base.write(rtf, "MASS  -1  HCP1       1.00800 H ! polar H\n")                                                      ## HGP1  -> HCP1
    Base.write(rtf, "MASS  -1  HCC        1.00800 H ! polar H, +ve charge\n")                                          ## HGP2  -> HCC (não existe)
    Base.write(rtf, "!! oxygen\n")
    Base.write(rtf, "MASS  -1  OC2DP     15.99940 O ! =O in phosphate or sulfate\n")                                   ## OG2P1 -> OC2DP
    Base.write(rtf, "MASS  -1  OC312     15.99940 O ! hydroxyl oxygen\n")                                              ## OG311 -> OC312
    Base.write(rtf, "MASS  -1  OC3OP     15.99940 O ! phosphate/sulfate ester oxygen\n")                               ## OG303 -> OC30P
    Base.write(rtf, "!! nitrogen\n")
    Base.write(rtf, "MASS  -1  NH3C      14.00700 N ! primary NH3+, phosphatidylethanolamine\n")                       ## NG3P3 -> NH3C (não existe)
    Base.write(rtf, "!! phosphorous\n")
    Base.write(rtf, "MASS  -1  PC        30.97380 P  ! phosphate -1\n")                                                ## PG1   -> PC
    Base.write(rtf, "! DEFAults for patching FIRSt and LAST residues\n")
    Base.write(rtf, "DEFA FIRS NONE LAST NONE\n")
    Base.write(rtf, "AUTOGENERATE ANGLES DIHEDRALS PATCH DRUDE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! RESIDS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "RESI ENP            0.000 ! param penalty=   0.000 ; charge penalty=   0.000\n")
    Base.write(rtf, "GROUP             ! CHARGE    PENALTY  Z   EL   NB NBE RNG1 TYP RNG2 TYP RNG3 TYP\n")
    Base.write(rtf, "ATOM N     NH3C   -0.293 !    0.000   7   N    4  4\n")
    Base.write(rtf, "ATOM HN1    HCC     0.328 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM HN2    HCC     0.328 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM HN3    HCC     0.328 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM C12    CC316P  0.130 !    0.000   6   C    4  4\n")
    Base.write(rtf, "ATOM H2A    HCA2P   0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM H2B    HCA2P   0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM C11    CC316P -0.084 !    0.000   6   C    4  4\n")
    Base.write(rtf, "ATOM H1A    HCA2P   0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM H1B    HCA2P   0.090 !    0.000   1   H    1  1\n")
    Base.write(rtf, "ATOM P      PC      1.505 !    0.000   15  P    4  5\n")
    Base.write(rtf, "ATOM O4P    OC2DP  -0.824 !    0.000   8   O    1  1\n")
    Base.write(rtf, "ATOM O3P    OC2DP  -0.824 !    0.000   8   O    1  2\n")
    Base.write(rtf, "ATOM O2P    OC3OP  -0.623 !    0.000   8   O    2  2\n")
    Base.write(rtf, "ATOM O1P    OC312  -0.669 !    0.000   8   O    2  2\n")
    Base.write(rtf, "ATOM HOP    HCP1    0.338 !    0.000   1   H    1  1\n")
    Base.write(rtf, "               ! TYP INR\n")
    Base.write(rtf, "BOND N    HN1  ! 1   0\n")
    Base.write(rtf, "BOND N    HN2  ! 1   0\n")
    Base.write(rtf, "BOND N    HN3  ! 1   0\n")
    Base.write(rtf, "BOND N    C12  ! 1   0\n")
    Base.write(rtf, "BOND C12  C11  ! 1   0\n")
    Base.write(rtf, "BOND C12  H2A  ! 1   0\n")
    Base.write(rtf, "BOND C12  H2B  ! 1   0\n")
    Base.write(rtf, "BOND C11  H1A  ! 1   0\n")
    Base.write(rtf, "BOND C11  H1B  ! 1   0\n")
    Base.write(rtf, "BOND C11  O2P  ! 1   0\n")
    Base.write(rtf, "BOND P    O3P  ! 2   0\n")
    Base.write(rtf, "BOND P    O1P  ! 1   0\n")
    Base.write(rtf, "BOND P    O4P  ! 1   0\n")
    Base.write(rtf, "BOND P    O2P  ! 1   0\n")
    Base.write(rtf, "BOND O1P  HOP  ! 1   0\n")
    Base.write(rtf, "PATC FIRS NONE LAST NONE\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "!! PATCHES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "! pEtN-BGlc linkage \n")
    Base.write(rtf, "! phosphatidylethanolamine + cellulose -> pEtN-cellulose + diacylglycerol\n")
    Base.write(rtf, "PRES PCEL          -0.715  ! (i-1)6->P(i) B-Glc O6 attacking the pEtN P (maybe SN1 mechanism)\n") ## -0.089
    Base.write(rtf, "dele atom 1HO6		        ! residual charge =  0.420\n") ## leaving the sugar with the charge of -0.420
    Base.write(rtf, "dele atom 2O1P		        ! residual charge = -0.669\n")
    Base.write(rtf, "dele atom 2HOP		        ! residual charge =  0.338\n") ## therefore is lefting 0.331 charge on pEtN residue
    Base.write(rtf, "ATOM 1C6  CC321    -0.022  ! ORIGINAL PENALTY = 2.485\n") ## the original sugar charge is  0.050 (-0.022 on CGENFF)
    Base.write(rtf, "ATOM 1O6  OC311    -0.624  ! ORIGINAL PENALTY = 2.214\n") ## the original sugar charge is -0.650 (-0.571 on CGENFF)
    Base.write(rtf, "ATOM 2P   PC	     1.501\n") ## só aqui tem -0.750 de carga parcial sem contar o açúcar!
    Base.write(rtf, "ATOM 2C11 CC316P   -0.077\n") ## no final, sem contar os átomos deletados da pEtN tem que ser 0.412
    Base.write(rtf, "ATOM 2O2P OC3OP    -0.569\n")
    Base.write(rtf, "ATOM 2O3P OC2DP    -0.785\n") # 0,466
    Base.write(rtf, "ATOM 2O4P OC2DP    -0.785\n") # tenho que ajustar as cargas do açúcar pra ser -0,046
    Base.write(rtf, "BOND 1O6  2P\n")
    Base.write(rtf, "!      I       J       K        L          R(IK)   T(IKJ)    PHI   T(JKL)   R(KL)\n")
    Base.write(rtf, "IC     2HN1    2C12    *2N      2HN2     1.0400  110.15   122.13  117.40  1.0400\n")
    Base.write(rtf, "IC     2HN1    2C12    *2N      2HN3     1.0400  110.15  -124.28  113.58  1.0400\n")
    Base.write(rtf, "IC     2HN1    2N      2C12     2C11     1.0400  110.15   157.44  108.52  1.4921\n")
    Base.write(rtf, "IC     2C11    2N      *2C12    2H2A     1.4921  108.52  -124.86  113.65  1.1110\n")
    Base.write(rtf, "IC     2H2A    2N      *2C12    2H2B     1.1110  113.65  -107.22  102.84  1.1110\n")
    Base.write(rtf, "IC     2N      2C12    2C11     2O2P     1.5241  108.52    60.11  106.54  1.4914\n")
    Base.write(rtf, "IC     2O2P    2C12    *2C11    2H1A     1.4914  106.54  -125.10  115.49  1.1110\n")
    Base.write(rtf, "IC     2H1A    2C12    *2C11    2H1B     1.1110  115.49  -116.55  111.62  1.1110\n")
    Base.write(rtf, "IC     2C12    2C11    2O2P     2P       1.4921  106.54   109.74  118.42  1.5799\n")
    Base.write(rtf, "IC     2C11    2O2P    2P       1O6      1.4914  118.42    45.68  108.09  1.5231\n")
    Base.write(rtf, "IC     1O6     2O2P    *2P      2O13     1.5231  108.09   119.87  104.67  1.4621\n")
    Base.write(rtf, "IC     1O6     2O2P    *2P      2O14     1.5231  108.09  -120.31  106.92  1.5173\n")
    Base.write(rtf, "IC     2O2P    2P      1O6      1C6      1.5799  108.09    83.12  132.97  1.4179\n")
    Base.write(rtf, "IC     2P      1O6     1C6      1C5      1.5231  132.97   -54.60  109.41  1.5597 !! -131.54\n")
    Base.write(rtf, "\n")
    Base.write(rtf, "END\n")

    Base.close(rtf)

    return filename
end

